{"version":3,"sources":["attina.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["getDiagram","title","input","callback","mermaidAPI","initialize","startOnLoad","parseError","err","hash","render","diagram","e","console","log","Attina","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","__html","_this2","_ref","setState","nextProps","nextState","_this3","_ref2","react_default","a","createElement","dangerouslySetInnerHTML","style","objectSpread","display","alignItems","justifyContent","React","Component","defaultProps","frameBorder","getCodeFromLocation","location","search","codeBase64","queryString","parse","code","Base64","decode","App","source","error","status","handleChange","bind","assertThisInitialized","handleSubmitDirect","handleSubmit","debounce","newValue","base64Result","encodeURI","history","push","concat","setTimeout","transformJsStringToMermaidString","flexDirection","height","flexWrap","flexBasis","flexShrink","flexGrow","lib_default","mode","theme","onChange","name","editorProps","$blockScrolling","value","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","onClick","position","fontWeight","outline","color","fontSize","borderRadius","border","backgroundColor","marginLeft","marginRight","alignSelf","zIndex","undefined","attina","copy","debug","message","minHeight","readOnly","BrowserRouter","Route","component","Editor","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRASA,SAASA,EAAWC,EAAOC,EAAOC,GAChC,IACEC,aAAWC,WAAW,CACpBC,aAAa,IAGfF,aAAWG,WAAa,SAASC,EAAKC,KAmBtCL,aAAWM,OAAOT,EAAOC,EAAO,SAAAS,GAG9BR,EAAS,CAAEQ,UAAST,YAEtB,MAAOU,GACPC,QAAQC,IAAI,8BACZD,QAAQC,IAAIF,QAIVG,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXb,QAAS,CACPc,OAAQ,KALKR,mFAUC,IAAAS,EAAAN,KAClBpB,EAAWoB,KAAKJ,MAAMf,MAAOmB,KAAKJ,MAAML,QAAS,SAAAgB,GAAwB,IAArBhB,EAAqBgB,EAArBhB,QAAST,EAAYyB,EAAZzB,MAC3DwB,EAAKE,SAAS,CAAEjB,QAAS,CAAEc,OAAQd,GAAWT,0DAI5B2B,EAAWC,GAAW,IAAAC,EAAAX,KAC1C,OAAIS,EAAUlB,UAAYS,KAAKJ,MAAML,SAKnCX,EAAWoB,KAAKJ,MAAMf,MAAO4B,EAAUlB,QAAS,SAAAqB,GAAwB,IAArBrB,EAAqBqB,EAArBrB,QAAST,EAAY8B,EAAZ9B,MAC1D6B,EAAKH,SAAS,CAAEjB,QAAS,CAAEc,OAAQd,GAAWT,aAGzC,GAEL4B,EAAUnB,UAAYS,KAAKI,MAAMb,yCAerC,OACEsB,EAAAC,EAAAC,cAAA,OACEC,wBAAyBhB,KAAKI,MAAMb,QACpC0B,MAAKnB,OAAAoB,EAAA,EAAApB,CAAA,CACHqB,QAAS,OACTC,WAAY,SACZC,eAAgB,UACbrB,KAAKJ,MAAMqB,gBAnDHK,IAAMC,WA0D3B5B,EAAO6B,aAAe,CACpB3C,MAAO,UACP4C,YAAa,GAGA9B,oJCtFT+B,EAAsB,SAAAnB,GAAkB,IAAfoB,EAAepB,EAAfoB,SAC7B,IAEE,IAAMC,EAASD,EAASC,OAIlBC,EAFSC,IAAYC,MAAMH,GAEPI,KAI1B,MAAO,CAAEA,KAFIC,SAAOC,OAAOL,IAG3B,MAAOrC,GAEP,OADAC,QAAQC,IAAI,sBACL,CACLsC,KAAI,sGA4PKG,cAhPb,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACjBtC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXgC,OAAM,kBACNC,MAAO,KACPC,OAAQ,QAGVzC,EAAK0C,aAAe1C,EAAK0C,aAAaC,KAAlB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KACpBA,EAAK6C,mBAAqB7C,EAAK6C,mBAAmBF,KAAxB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAC1BA,EAAK8C,aAAeC,IAAS,IAAK/C,EAAK6C,oBAAoBF,KAAvC1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAVHA,4EAaNgD,GACX,IAAMC,EAAeb,SAAOc,UAAUF,GACtC7C,KAAKJ,MAAMoD,QAAQC,KAAnB,WAAAC,OAAmCJ,IACnC9C,KAAK2C,4DAGc,IAAArC,EAAAN,KACnBmD,WAAW,WAAM,IACPnB,EAASN,EAAoB,CAAEC,SAAUrB,EAAKV,MAAM+B,WAApDK,KACR1B,EAAKE,SACH,CACE4B,OAAM,qBACNE,OAAQ,WAEV,WACEa,WAAW,WACT,IACE,IAAMf,EAASgB,2CAAiCpB,GAChD1B,EAAKE,SAAS,CACZ4B,OAAQA,EACRE,OAAQ,SACRD,MAAO,OAET,MAAOA,GACP/B,EAAKE,SAAS,CACZ8B,OAAQ,QACRD,MAAOA,MAGV,MAGN,+CAGe,IACVL,EAASN,EAAoB,CAAEC,SAAU3B,KAAKJ,MAAM+B,WAApDK,KACRhC,KAAKuC,aAAaP,oCAGX,IAAArB,EAAAX,KACCgC,EAASN,EAAoB,CAAEC,SAAU3B,KAAKJ,MAAM+B,WAApDK,KACR,OACEnB,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLE,QAAS,OACTkC,cAAe,MACfC,OAAQ,QACRlC,WAAY,UACZmC,SAAU,SAGZ1C,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLuC,UAAW,MACXC,WAAY,EACZC,SAAU,EACVJ,OAAQ,SAGVzC,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,KAAK,aACLC,MAAM,UACNC,SAAU9D,KAAKuC,aACfwB,KAAK,kBACLC,YAAa,CAAEC,iBAAiB,GAChCC,MAAOlC,EACPf,MAAO,CACLuC,UAAW,MACXC,WAAY,EACZC,SAAU,EACVS,MAAO,OACPb,OAAQ,QAEVc,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,MAKf5D,EAAAC,EAAAC,cAAA,UACE2D,QAAS1E,KAAK0C,mBACdzB,MAAO,CACL0D,SAAU,WACVC,WAAY,IACZC,QAAS,OACTC,MAAO,QACPC,SAAU,QACVC,aAAc,OACdC,OAAQ,OACRC,gBAAiB,UACjBf,MAAO,GACPb,OAAQ,GACR6B,YAAa,GACbC,aAAc,GACdC,UAAW,SACXC,OAAQ,OAGa,YAAtBtF,KAAKI,MAAMkC,OAAuB,KAAO,QAEtB,OAArBtC,KAAKI,MAAMiC,YAAuCkD,IAArBvF,KAAKI,MAAMiC,MACvCxB,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLuC,UAAW,MACXC,WAAY,EACZC,SAAU,EACVJ,OAAQ,OACRnC,QAAS,OACTkC,cAAe,WAGjBxC,EAAAC,EAAAC,cAACyE,EAAD,CACEjG,QAASS,KAAKI,MAAMgC,OACpBnB,MAAO,CAAEuC,UAAW,MAAOC,WAAY,EAAGC,SAAU,KAEtD7C,EAAAC,EAAAC,cAAA,UACE2D,QAAS,WAEPe,IAAK9E,EAAKP,MAAMgC,OAAQ,CACtBsD,OAAO,EACPC,QAAS,yBAEXhF,EAAKH,SAAS,CAAE8B,OAAQ,YAE1BrB,MAAO,CACL6D,MAAO,QAEPE,aAAc,IACdC,OAAQ,OACRJ,QAAS,OACTK,gBAAiB,UACjB1B,UAAW,OACXC,WAAY,EACZC,SAAU,EACVS,MAAO,OACPyB,UAAW,SAGU,WAAtB5F,KAAKI,MAAMkC,OACR,+BACA,WAENzB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAEE+C,MAAM,SACNgC,UAAU,EACV9B,KAAK,oBACLC,YAAa,CAAEC,iBAAiB,GAKhCC,MAAOlE,KAAKI,MAAMgC,OAKlBnB,MAAO,CACLuC,UAAW,MACXC,WAAY,EACZC,SAAU,EACVS,MAAO,OACPb,OAAQ,OAEVc,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,MAKf5D,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLuC,UAAW,MACXC,WAAY,EACZC,SAAU,EACVJ,OAAQ,OACRnC,QAAS,OACTkC,cAAe,WAGjBxC,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAEE+C,MAAM,SACNgC,UAAU,EACV9B,KAAK,mBACLC,YAAa,CAAEC,iBAAiB,GAKhCC,MAAOlE,KAAKI,MAAMiC,MAAMsD,QAKxB1E,MAAO,CACLuC,UAAW,OACXC,WAAY,EACZC,SAAU,EACVS,MAAO,OACPb,OAAQ,OACRwB,MAAO,OAETV,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,cAvOPlD,+BC9BHY,mLARX,OACEtB,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOC,UAAWC,YAJR1E,aCIE2E,QACW,cAA7BC,OAAOxE,SAASyE,UAEe,UAA7BD,OAAOxE,SAASyE,UAEhBD,OAAOxE,SAASyE,SAASC,MACvB,2DCZNC,IAAShH,OAAOuB,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3fe6ab54.chunk.js","sourcesContent":["import React from \"react\";\nimport { mermaidAPI } from \"mermaid\";\n\n// import debounce from \"lodash/fp/debounce\";\n// mermaidAPI.initialize({\n//   startOnLoad: true,\n//   logLevel: 1\n// });\n\nfunction getDiagram(title, input, callback) {\n  try {\n    mermaidAPI.initialize({\n      startOnLoad: true\n    });\n\n    mermaidAPI.parseError = function(err, hash) {\n      // console.log(\"parseError\");\n      // console.log(err.messsage);\n    };\n    // console.log(\"Rendering\");\n    // console.log(input);\n    // mermaidAPI.render(title, \"graph TB;Loading;\", diagram => {\n    //   console.log(\"Rendered\");\n    //   setTimeout(\n    //     () =>\n    //       mermaidAPI.render(title, input, diagram => {\n    //         console.log(\"Rendered\");\n    //         console.log(diagram);\n    //         callback(diagram);\n    //       }),\n    //     200\n    //   );\n    // });\n\n    mermaidAPI.render(title, input, diagram => {\n      // console.log(\"Rendered\");\n      // console.log(diagram);\n      callback({ diagram, input });\n    });\n  } catch (e) {\n    console.log(\"Failed to generate diagram\");\n    console.log(e);\n  }\n}\n\nclass Attina extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      diagram: {\n        __html: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    getDiagram(this.props.title, this.props.diagram, ({ diagram, input }) => {\n      this.setState({ diagram: { __html: diagram }, input });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.diagram !== this.props.diagram) {\n      // console.log(\n      //   \"==============================================================================\"\n      // );\n\n      getDiagram(this.props.title, nextProps.diagram, ({ diagram, input }) => {\n        this.setState({ diagram: { __html: diagram }, input });\n      });\n\n      return false;\n    }\n    if (nextState.diagram !== this.state.diagram) {\n      // console.log(\n      //   \"-------------------------------------------------------------------------------\"\n      // );\n      // console.log(nextState.diagram);\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    // const { ...props } = this.props;\n    // console.log(\"IJIJIJIJIJ\");\n    // console.log(this.props.diagram);\n    // console.log(this.state.diagram);\n    return (\n      <div\n        dangerouslySetInnerHTML={this.state.diagram}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          ...this.props.style\n        }}\n      />\n    );\n  }\n}\n\nAttina.defaultProps = {\n  title: \"diagram\",\n  frameBorder: 0\n};\n\nexport default Attina;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Attina from \"./attina\";\nimport debounce from \"lodash/fp/debounce\";\nimport { transformJsStringToMermaidString } from \"code-to-graph\";\nimport copy from \"copy-to-clipboard\";\n\nimport brace from \"brace\";\nimport AceEditor from \"react-ace\";\n\nimport \"brace/mode/javascript\";\nimport \"brace/snippets/javascript\";\nimport \"brace/theme/github\";\nimport \"brace/theme/monokai\";\nimport \"brace/ext/language_tools\";\nimport \"brace/ext/searchbox\";\n\nimport { Base64 } from \"js-base64\";\n\nimport queryString from \"query-string\";\n\nconst getCodeFromLocation = ({ location }) => {\n  try {\n    // console.log(\"code\");\n    const search = location.search;\n    // console.log(search);\n    const params = queryString.parse(search);\n    // console.log(params);\n    const codeBase64 = params.code;\n    // console.log(codeBase64);\n    const code = Base64.decode(codeBase64);\n    // console.log(code);\n    return { code: code };\n  } catch (e) {\n    console.log(\"Using default code\");\n    return {\n      code: `const myFunction = (x) => {\n  if(x>0){\n    return \"ok\"\n  } else {\n    throw \"not ok\"\n  }\n}`\n    };\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: `graph TB; Init;`,\n      error: null,\n      status: \"init\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitDirect = this.handleSubmitDirect.bind(this);\n    this.handleSubmit = debounce(200, this.handleSubmitDirect).bind(this);\n  }\n\n  handleChange(newValue) {\n    const base64Result = Base64.encodeURI(newValue);\n    this.props.history.push(`./?code=${base64Result}`);\n    this.handleSubmit();\n  }\n\n  handleSubmitDirect() {\n    setTimeout(() => {\n      const { code } = getCodeFromLocation({ location: this.props.location });\n      this.setState(\n        {\n          source: `graph TB; Loading;`,\n          status: \"loading\"\n        },\n        () => {\n          setTimeout(() => {\n            try {\n              const source = transformJsStringToMermaidString(code);\n              this.setState({\n                source: source,\n                status: \"loaded\",\n                error: null\n              });\n            } catch (error) {\n              this.setState({\n                status: \"error\",\n                error: error\n              });\n            }\n          }, 0);\n        }\n      );\n    }, 0);\n  }\n\n  componentDidMount() {\n    const { code } = getCodeFromLocation({ location: this.props.location });\n    this.handleChange(code);\n  }\n\n  render() {\n    const { code } = getCodeFromLocation({ location: this.props.location });\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          height: \"100vh\",\n          alignItems: \"stretch\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        <div\n          style={{\n            flexBasis: \"50%\",\n            flexShrink: 1,\n            flexGrow: 1,\n            height: \"100%\"\n          }}\n        >\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"monokai\"\n            onChange={this.handleChange}\n            name=\"code-ace-editor\"\n            editorProps={{ $blockScrolling: true }}\n            value={code}\n            style={{\n              flexBasis: \"50%\",\n              flexShrink: 1,\n              flexGrow: 1,\n              width: \"100%\",\n              height: \"100%\"\n            }}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2\n            }}\n          />\n        </div>\n\n        <button\n          onClick={this.handleSubmitDirect}\n          style={{\n            position: \"relative\",\n            fontWeight: 600,\n            outline: \"none\",\n            color: \"white\",\n            fontSize: \"1.2em\",\n            borderRadius: \"100%\",\n            border: \"none\",\n            backgroundColor: \"#FF44FF\",\n            width: 60,\n            height: 60,\n            marginLeft: -30,\n            marginRight: -30,\n            alignSelf: \"center\",\n            zIndex: 9999\n          }}\n        >\n          {this.state.status !== \"loading\" ? \"Go\" : \"Wait\"}\n        </button>\n        {this.state.error === null || this.state.error === undefined ? (\n          <div\n            style={{\n              flexBasis: \"50%\",\n              flexShrink: 1,\n              flexGrow: 0,\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\"\n            }}\n          >\n            <Attina\n              diagram={this.state.source}\n              style={{ flexBasis: \"80%\", flexShrink: 1, flexGrow: 1 }}\n            />\n            <button\n              onClick={() => {\n                // Copy with options\n                copy(this.state.source, {\n                  debug: true,\n                  message: \"Press #{key} to copy\"\n                });\n                this.setState({ status: \"copied\" });\n              }}\n              style={{\n                color: \"white\",\n                // fontSize: \"1.2em\",\n                borderRadius: \"0\",\n                border: \"none\",\n                outline: \"none\",\n                backgroundColor: \"#FF44FF\",\n                flexBasis: \"30px\",\n                flexShrink: 0,\n                flexGrow: 1,\n                width: \"100%\",\n                minHeight: \"30px\"\n              }}\n            >\n              {this.state.status !== \"copied\"\n                ? \"Copy graph code to clipboard\"\n                : \"Copied!\"}\n            </button>\n            <AceEditor\n              // mode=\"javascript\"\n              theme=\"github\"\n              readOnly={true}\n              name=\"result-ace-editor\"\n              editorProps={{ $blockScrolling: true }}\n              // onLoad={this.onLoad}\n              // onSelectionChange={this.onSelectionChange}\n              // onCursorChange={this.onCursorChange}\n              // onValidate={this.onValidate}\n              value={this.state.source}\n              // fontSize={this.state.fontSize}\n              // showPrintMargin={this.state.showPrintMargin}\n              // showGutter={this.state.showGutter}\n              // highlightActiveLine={this.state.highlightActiveLine}\n              style={{\n                flexBasis: \"20%\",\n                flexShrink: 0,\n                flexGrow: 0,\n                width: \"100%\",\n                height: \"20%\"\n              }}\n              setOptions={{\n                enableBasicAutocompletion: false,\n                enableLiveAutocompletion: false,\n                enableSnippets: false,\n                showLineNumbers: false,\n                tabSize: 2\n              }}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              flexBasis: \"50%\",\n              flexShrink: 0,\n              flexGrow: 0,\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\"\n            }}\n          >\n            <AceEditor\n              // mode=\"javascript\"\n              theme=\"github\"\n              readOnly={true}\n              name=\"error-ace-editor\"\n              editorProps={{ $blockScrolling: true }}\n              // onLoad={this.onLoad}\n              // onSelectionChange={this.onSelectionChange}\n              // onCursorChange={this.onCursorChange}\n              // onValidate={this.onValidate}\n              value={this.state.error.message}\n              // fontSize={this.state.fontSize}\n              // showPrintMargin={this.state.showPrintMargin}\n              // showGutter={this.state.showGutter}\n              // highlightActiveLine={this.state.highlightActiveLine}\n              style={{\n                flexBasis: \"100%\",\n                flexShrink: 0,\n                flexGrow: 0,\n                width: \"100%\",\n                height: \"100%\",\n                color: \"red\"\n              }}\n              setOptions={{\n                enableBasicAutocompletion: false,\n                enableLiveAutocompletion: false,\n                enableSnippets: false,\n                showLineNumbers: false,\n                tabSize: 2\n              }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Editor from \"./editor\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route component={Editor} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}