{"version":3,"sources":["attina.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["getDiagram","title","input","callback","mermaidAPI","initialize","startOnLoad","parseError","err","hash","render","diagram","e","console","log","Attina","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","__html","_this2","_ref","setState","nextProps","nextState","_this3","_ref2","react_default","a","createElement","Fragment","onClick","blob","Blob","document","getElementsByClassName","innerHTML","type","FileSaver","saveAs","style","color","borderRadius","border","outline","backgroundColor","flexBasis","flexShrink","flexGrow","width","minHeight","zIndex","status","dangerouslySetInnerHTML","className","objectSpread","display","alignItems","justifyContent","React","Component","defaultProps","frameBorder","getCodeFromLocation","location","search","codeBase64","queryString","parse","code","Base64","decode","App","onDrop","acceptedFiles","rejectedFiles","forEach","file","reader","FileReader","onload","fileAsBinaryString","result","handleChange","onabort","onerror","readAsBinaryString","source","error","bind","assertThisInitialized","handleSubmitDirect","handleSubmit","debounce","newValue","base64Result","encodeURI","history","push","concat","setTimeout","transformJsStringToMermaidString","es","getRootProps","getInputProps","isDragActive","assign","undefined","flexDirection","height","flexWrap","position","fontSize","left","right","top","bottom","lib_default","mode","theme","onChange","name","editorProps","$blockScrolling","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","fontWeight","marginLeft","marginRight","alignSelf","attina","copy","debug","message","readOnly","GithubCorner_default","href","svgStyle","BrowserRouter","Route","component","Editor","Boolean","window","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e26852bc.chunk.js","sourcesContent":["import React from \"react\";\nimport { mermaidAPI } from \"mermaid\";\nimport FileSaver from \"file-saver\";\n\n// import debounce from \"lodash/fp/debounce\";\n// mermaidAPI.initialize({\n//   startOnLoad: true,\n//   logLevel: 1\n// });\n\nfunction getDiagram(title, input, callback) {\n  try {\n    mermaidAPI.initialize({\n      startOnLoad: true\n    });\n\n    mermaidAPI.parseError = function(err, hash) {\n      // console.log(\"parseError\");\n      // console.log(err.messsage);\n    };\n    // console.log(\"Rendering\");\n    // console.log(input);\n    // mermaidAPI.render(title, \"graph TB;Loading;\", diagram => {\n    //   console.log(\"Rendered\");\n    //   setTimeout(\n    //     () =>\n    //       mermaidAPI.render(title, input, diagram => {\n    //         console.log(\"Rendered\");\n    //         console.log(diagram);\n    //         callback(diagram);\n    //       }),\n    //     200\n    //   );\n    // });\n\n    mermaidAPI.render(title, input, diagram => {\n      // console.log(\"Rendered\");\n      // console.log(diagram);\n      callback({ diagram, input });\n    });\n  } catch (e) {\n    console.log(\"Failed to generate diagram\");\n    console.log(e);\n  }\n}\n\nclass Attina extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      diagram: {\n        __html: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    getDiagram(this.props.title, this.props.diagram, ({ diagram, input }) => {\n      this.setState({ diagram: { __html: diagram }, input });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.diagram !== this.props.diagram) {\n      getDiagram(this.props.title, nextProps.diagram, ({ diagram, input }) => {\n        this.setState({ diagram: { __html: diagram }, input });\n      });\n\n      return false;\n    }\n    if (nextState.diagram !== this.state.diagram) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => {\n            var blob = new Blob(\n              [\n                document.getElementsByClassName(\"mermaid-code-to-graph\")[0]\n                  .innerHTML\n              ],\n              {\n                type: \"image/svg+xml;charset=utf-8\"\n              }\n            );\n            FileSaver.saveAs(blob, \"graph.svg\");\n          }}\n          style={{\n            color: \"white\",\n            // fontSize: \"1.2em\",\n            borderRadius: \"0\",\n            border: \"none\",\n            outline: \"none\",\n            backgroundColor: \"#FF44FF\",\n            flexBasis: \"30px\",\n            flexShrink: 0,\n            flexGrow: 1,\n            width: \"100%\",\n            minHeight: \"30px\",\n            zIndex: 1\n          }}\n        >\n          {this.state.status !== \"loading\"\n            ? \"Download SVG File\"\n            : \"Download SVG File!\"}\n        </button>\n        <div\n          dangerouslySetInnerHTML={this.state.diagram}\n          className={\"mermaid-code-to-graph\"}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            ...this.props.style\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAttina.defaultProps = {\n  title: \"diagram\",\n  frameBorder: 0\n};\n\nexport default Attina;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Attina from \"./attina\";\nimport debounce from \"lodash/fp/debounce\";\nimport { transformJsStringToMermaidString } from \"code-to-graph\";\nimport copy from \"copy-to-clipboard\";\n\nimport brace from \"brace\";\nimport AceEditor from \"react-ace\";\nimport Dropzone from \"react-dropzone\";\n\nimport \"brace/mode/javascript\";\nimport \"brace/snippets/javascript\";\nimport \"brace/theme/github\";\nimport \"brace/theme/monokai\";\nimport \"brace/ext/language_tools\";\nimport \"brace/ext/searchbox\";\n\nimport { Base64 } from \"js-base64\";\n\nimport queryString from \"query-string\";\n\nconst getCodeFromLocation = ({ location }) => {\n  try {\n    // console.log(\"code\");\n    const search = location.search;\n    // console.log(search);\n    const params = queryString.parse(search);\n    // console.log(params);\n    const codeBase64 = params.code;\n    // console.log(codeBase64);\n    const code = Base64.decode(codeBase64);\n    // console.log(code);\n    return { code: code };\n  } catch (e) {\n    console.log(\"Using default code\");\n    return {\n      code: `const myFunction = (x) => {\n  if(x>0){\n    return \"ok\"\n  } else {\n    throw \"not ok\"\n  }\n}`\n    };\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: `graph TB; Init;`,\n      error: null,\n      status: \"init\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitDirect = this.handleSubmitDirect.bind(this);\n    this.handleSubmit = debounce(200, this.handleSubmitDirect).bind(this);\n  }\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // console.log(\"drop\", acceptedFiles, rejectedFiles);\n\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileAsBinaryString = reader.result;\n        this.handleChange(fileAsBinaryString);\n      };\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  handleChange(newValue) {\n    const base64Result = Base64.encodeURI(newValue);\n    this.props.history.push(`./?code=${base64Result}`);\n    this.handleSubmit();\n  }\n\n  handleSubmitDirect() {\n    setTimeout(() => {\n      const { code } = getCodeFromLocation({ location: this.props.location });\n      this.setState(\n        {\n          source: `graph TB; Loading;`,\n          status: \"loading\"\n        },\n        () => {\n          setTimeout(() => {\n            try {\n              const source = transformJsStringToMermaidString(code);\n              this.setState({\n                source: source,\n                status: \"loaded\",\n                error: null\n              });\n            } catch (error) {\n              this.setState({\n                status: \"error\",\n                error: error\n              });\n            }\n          }, 0);\n        }\n      );\n    }, 0);\n  }\n\n  componentDidMount() {\n    const { code } = getCodeFromLocation({ location: this.props.location });\n    this.handleChange(code);\n  }\n\n  render() {\n    const { code } = getCodeFromLocation({ location: this.props.location });\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({ getRootProps, getInputProps, isDragActive }) => {\n          return (\n            <div\n              {...getRootProps()}\n              onClick={undefined}\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                height: \"100vh\",\n                alignItems: \"stretch\",\n\n                flexWrap: \"wrap\"\n              }}\n            >\n              {isDragActive ? (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    color: \"white\",\n                    fontSize: \"2em\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    backgroundColor: \"rgba(0,0,0,0.8)\",\n                    zIndex: 99999\n                  }}\n                >\n                  Drop file anywhere\n                </div>\n              ) : null}\n              <div\n                style={{\n                  flexBasis: \"50%\",\n                  flexShrink: 1,\n                  flexGrow: 1,\n                  height: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"stretch\",\n                  justifyContent: \"stretch\"\n                }}\n              >\n                <AceEditor\n                  mode=\"javascript\"\n                  theme=\"monokai\"\n                  onChange={this.handleChange}\n                  name=\"code-ace-editor\"\n                  editorProps={{ $blockScrolling: true }}\n                  value={code}\n                  style={{\n                    flexBasis: \"100vh\",\n                    flexShrink: 1,\n                    flexGrow: 1,\n                    width: \"100%\"\n                    // height: \"100%\"\n                  }}\n                  setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 2\n                  }}\n                />\n                <input\n                  {...getInputProps()}\n                  style={{\n                    color: \"white\",\n                    // fontSize: \"1.2em\",\n                    borderRadius: \"0\",\n                    border: \"none\",\n                    outline: \"none\",\n                    backgroundColor: \"#FF44FF\",\n                    flexBasis: \"30px\",\n                    flexShrink: 0,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexGrow: 1,\n                    width: \"100%\",\n                    minHeight: \"30px\"\n                  }}\n                />\n              </div>\n\n              <button\n                onClick={this.handleSubmitDirect}\n                style={{\n                  position: \"relative\",\n                  fontWeight: 600,\n                  outline: \"none\",\n                  color: \"white\",\n                  fontSize: \"1.2em\",\n                  borderRadius: \"100%\",\n                  border: \"none\",\n                  backgroundColor: \"#FF44FF\",\n                  width: 60,\n                  height: 60,\n                  marginLeft: -30,\n                  marginRight: -30,\n                  alignSelf: \"center\",\n                  zIndex: 9999\n                }}\n              >\n                {this.state.status !== \"loading\" ? \"Go\" : \"Wait\"}\n              </button>\n              {this.state.error === null || this.state.error === undefined ? (\n                <div\n                  style={{\n                    flexBasis: \"50%\",\n                    flexShrink: 1,\n                    flexGrow: 0,\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  }}\n                >\n                  <Attina\n                    diagram={this.state.source}\n                    style={{ flexBasis: \"80%\", flexShrink: 1, flexGrow: 1 }}\n                  />\n                  <button\n                    onClick={() => {\n                      // Copy with options\n                      copy(this.state.source, {\n                        debug: true,\n                        message: \"Press #{key} to copy\"\n                      });\n                      this.setState({ status: \"copied\" });\n                    }}\n                    style={{\n                      color: \"white\",\n                      // fontSize: \"1.2em\",\n                      borderRadius: \"0\",\n                      border: \"none\",\n                      outline: \"none\",\n                      backgroundColor: \"#FF44FF\",\n                      flexBasis: \"30px\",\n                      flexShrink: 0,\n                      flexGrow: 1,\n                      width: \"100%\",\n                      minHeight: \"30px\"\n                    }}\n                  >\n                    {this.state.status !== \"copied\"\n                      ? \"Copy graph code to clipboard\"\n                      : \"Copied!\"}\n                  </button>\n                  <AceEditor\n                    // mode=\"javascript\"\n                    theme=\"github\"\n                    readOnly={true}\n                    name=\"result-ace-editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    // onLoad={this.onLoad}\n                    // onSelectionChange={this.onSelectionChange}\n                    // onCursorChange={this.onCursorChange}\n                    // onValidate={this.onValidate}\n                    value={this.state.source}\n                    // fontSize={this.state.fontSize}\n                    // showPrintMargin={this.state.showPrintMargin}\n                    // showGutter={this.state.showGutter}\n                    // highlightActiveLine={this.state.highlightActiveLine}\n                    style={{\n                      flexBasis: \"20%\",\n                      flexShrink: 0,\n                      flexGrow: 0,\n                      width: \"100%\",\n                      height: \"20%\"\n                    }}\n                    setOptions={{\n                      enableBasicAutocompletion: false,\n                      enableLiveAutocompletion: false,\n                      enableSnippets: false,\n                      showLineNumbers: false,\n                      tabSize: 2\n                    }}\n                  />\n                </div>\n              ) : (\n                <div\n                  style={{\n                    flexBasis: \"50%\",\n                    flexShrink: 0,\n                    flexGrow: 0,\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  }}\n                >\n                  <AceEditor\n                    // mode=\"javascript\"\n                    theme=\"github\"\n                    readOnly={true}\n                    name=\"error-ace-editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    // onLoad={this.onLoad}\n                    // onSelectionChange={this.onSelectionChange}\n                    // onCursorChange={this.onCursorChange}\n                    // onValidate={this.onValidate}\n                    value={this.state.error.message}\n                    // fontSize={this.state.fontSize}\n                    // showPrintMargin={this.state.showPrintMargin}\n                    // showGutter={this.state.showGutter}\n                    // highlightActiveLine={this.state.highlightActiveLine}\n                    style={{\n                      flexBasis: \"100%\",\n                      flexShrink: 0,\n                      flexGrow: 0,\n                      width: \"100%\",\n                      height: \"100%\",\n                      color: \"red\"\n                    }}\n                    setOptions={{\n                      enableBasicAutocompletion: false,\n                      enableLiveAutocompletion: false,\n                      enableSnippets: false,\n                      showLineNumbers: false,\n                      tabSize: 2\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n          );\n        }}\n      </Dropzone>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Editor from \"./editor\";\nimport GithubCorner from \"react-github-corner\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <GithubCorner\n          href=\"https://github.com/crubier/code-to-graph\"\n          style={{ zIndex: 20 }}\n          svgStyle={{ zIndex: 20 }}\n        />\n        <Router>\n          <Route component={Editor} />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}